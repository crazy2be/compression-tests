{
  "name": "arrays.js",
  "version": "0.0.0",
  "description": "Pure-JS implementation of Typed Arrays",
  "homepage": "http://github.com/stephank/node-arrays",
  "repository": {
    "type": "git",
    "url": "http://github.com/stephank/node-arrays.git"
  },
  "author": {
    "name": "Stéphan Kochen",
    "email": "stephan@kochen.nl",
    "url": "http://stephan.kochen.nl/"
  },
  "engines": {
    "node": ">=0.7.7"
  },
  "devDependencies": {
    "ben": "*"
  },
  "scripts": {
    "test": "node ./test/harness.js",
    "install": "node-gyp rebuild"
  },
  "main": "./index.js",
  "gypfile": true,
  "readme": "## TypedArrays in JS\n\nThis is an implementation of the [TypedArrays] draft spec for Node.js. It\nrequires at least Node.js 0.7.7.\n\nIt's written in JavaScript, with one exception: `makeFastBuffer`. This is an\nextended version of Node.js' `SlowBuffer.makeFastBuffer`, to allow different\ntypes of V8 ExternalArray property access.\n\n### Notes\n\nThe implementation passes the WebGL [conformance tests], but there are subtle\ndifferences with the current Node.js implementation when it comes to smaller\ndetails outside the spec:\n\n  - `Object#toString` always returns `[object Object]`. There doesn't appear to\n    be an API to set the class name for Function instances in V8.\n\n  - DataView in Node.js allowed construction using TypedArrays. This is outside\n    the spec (and Chrome doesn't allow it either).\n\n  - ArrayBufferViews in Node.js could be constructed from a Node.js Buffer. This\n    is still possible, but transparently creates an ArrayBuffer backed by the\n    Buffer.\n\n    In Node.js, `ArrayBufferView#buffer` would erronously be a Buffer in this\n    situation, which breaks the spec. The underlying Node.js Buffer is made\n    available as `ArrayBuffer#nodeBuffer` and `ArrayBufferView#nodeBuffer`, of\n    which the latter may be a slice matching the view.\n\n  - There is no `TypedArray#get` and `TypedArray#set` for indexing. These are\n    also not in the spec, but can be added, of course. Chrome doesn't have them.\n\n  - There is no `TypedArray#slice`, which is a Node.js extension that follows\n    `Buffer#slice` behavior. The spec defines `TypedArray#subarray`.\n \n    The name `slice` in this way also goes a bit against the definition\n    `ArrayBuffer#slice`, which actually creates a copy.\n\n### License\n\nParts are © Joyent, © Khronos Group, and original work done here\n© Stéphan Kochen. All MIT licensed.\n\n [TypedArrays]: http://www.khronos.org/registry/typedarray/specs/latest/\n [conformance tests]: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/tests/conformance/typedarrays/\n",
  "readmeFilename": "README.md",
  "_id": "arrays.js@0.0.0",
  "dist": {
    "shasum": "05cfc84658b064b19a52643370662993cfa0b863"
  },
  "_resolved": "git+ssh://git@github.com/:stephank/node-arrays.git#a3735089ef81e7406b7794bdc3848965220d8732",
  "_from": "git+ssh://git@github.com:stephank/node-arrays.git"
}
